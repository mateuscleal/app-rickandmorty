// Mocks generated by Mockito 5.4.6 from annotations
// in app/test/mocks/episode_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:app/data/model/episode_dto.dart' as _i4;
import 'package:app/data/repositories/episode/episode_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [EpisodeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEpisodeRepository extends _i1.Mock implements _i2.EpisodeRepository {
  MockEpisodeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.EpisodeDto>> fetchAllEpisodes() =>
      (super.noSuchMethod(
            Invocation.method(#fetchAllEpisodes, []),
            returnValue: _i3.Future<List<_i4.EpisodeDto>>.value(
              <_i4.EpisodeDto>[],
            ),
          )
          as _i3.Future<List<_i4.EpisodeDto>>);

  @override
  _i3.Future<List<_i4.EpisodeDto>> searchEpisodes(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#searchEpisodes, [name]),
            returnValue: _i3.Future<List<_i4.EpisodeDto>>.value(
              <_i4.EpisodeDto>[],
            ),
          )
          as _i3.Future<List<_i4.EpisodeDto>>);

  @override
  _i3.Future<void> updateEpisodeStatus(
    int? episodeId,
    bool? isFavorite,
    bool? isWatched,
    String? imagePath,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateEpisodeStatus, [
              episodeId,
              isFavorite,
              isWatched,
              imagePath,
            ]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
