// Mocks generated by Mockito 5.4.6 from annotations
// in app/test/mocks/integration_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:app/data/services/firebase_auth_service.dart' as _i4;
import 'package:app/data/services/graphql_service.dart' as _i8;
import 'package:app/data/services/hive_service.dart' as _i9;
import 'package:app/domain/models/password_reset_result.dart' as _i7;
import 'package:firebase_auth/firebase_auth.dart' as _i6;
import 'package:graphql_flutter/graphql_flutter.dart' as _i3;
import 'package:logger/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGraphQLClient_1 extends _i1.SmartFake implements _i3.GraphQLClient {
  _FakeGraphQLClient_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryResult_2<TParsed extends Object?> extends _i1.SmartFake
    implements _i3.QueryResult<TParsed> {
  _FakeQueryResult_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FirebaseAuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthService extends _i1.Mock
    implements _i4.FirebaseAuthService {
  MockFirebaseAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Logger get logger =>
      (super.noSuchMethod(
            Invocation.getter(#logger),
            returnValue: _FakeLogger_0(this, Invocation.getter(#logger)),
          )
          as _i2.Logger);

  @override
  _i5.Future<_i6.User?> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i5.Future<_i6.User?>.value(),
          )
          as _i5.Future<_i6.User?>);

  @override
  _i5.Future<_i6.User?> signUp(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [email, password]),
            returnValue: _i5.Future<_i6.User?>.value(),
          )
          as _i5.Future<_i6.User?>);

  @override
  _i5.Future<void> sendEmailVerification() =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isEmailVerified() =>
      (super.noSuchMethod(
            Invocation.method(#isEmailVerified, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<_i7.PasswordResetResult> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i5.Future<_i7.PasswordResetResult>.value(
              _i7.PasswordResetResult.success,
            ),
          )
          as _i5.Future<_i7.PasswordResetResult>);

  @override
  _i5.Future<bool> reloadUser() =>
      (super.noSuchMethod(
            Invocation.method(#reloadUser, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [GraphQLService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphQLService extends _i1.Mock implements _i8.GraphQLService {
  MockGraphQLService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GraphQLClient get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeGraphQLClient_1(this, Invocation.getter(#client)),
          )
          as _i3.GraphQLClient);

  @override
  set client(_i3.GraphQLClient? value) => super.noSuchMethod(
    Invocation.setter(#client, value),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i3.QueryResult<Object?>> executeQuery(
    String? query, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#executeQuery, [query], {#variables: variables}),
            returnValue: _i5.Future<_i3.QueryResult<Object?>>.value(
              _FakeQueryResult_2<Object?>(
                this,
                Invocation.method(
                  #executeQuery,
                  [query],
                  {#variables: variables},
                ),
              ),
            ),
          )
          as _i5.Future<_i3.QueryResult<Object?>>);
}

/// A class which mocks [HiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveService extends _i1.Mock implements _i9.HiveService {
  MockHiveService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userId =>
      (super.noSuchMethod(
            Invocation.getter(#userId),
            returnValue: _i10.dummyValue<String>(
              this,
              Invocation.getter(#userId),
            ),
          )
          as String);

  @override
  set userId(String? value) => super.noSuchMethod(
    Invocation.setter(#userId, value),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  Map<dynamic, dynamic> getValue(int? key) =>
      (super.noSuchMethod(
            Invocation.method(#getValue, [key]),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i5.Future<void> setValue(int? key, Map<String, dynamic>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setValue, [key, value]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
